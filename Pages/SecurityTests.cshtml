@page "/security-tests"
@model SafeVault.Pages.SecurityTestsModel
@{
    ViewData["Title"] = "Security Test Dashboard";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="display-4">üõ°Ô∏è SafeVault Security Test Dashboard</h1>
                <div>
                    @if (!Model.TestsCompleted && !Model.TestsRunning)
                    {
                        <form method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-primary btn-lg" name="action" value="RunTests">
                                <i class="fas fa-play"></i> Run Security Tests
                            </button>
                        </form>
                    }
                    @if (Model.TestsCompleted)
                    {
                        <form method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-secondary" name="action" value="ClearResults">
                                <i class="fas fa-refresh"></i> Clear Results
                            </button>
                        </form>
                        <form method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-primary" name="action" value="RunTests">
                                <i class="fas fa-redo"></i> Run Again
                            </button>
                        </form>
                    }
                </div>
            </div>

            @if (Model.TestsRunning)
            {
                <div class="alert alert-info text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 mb-0"><strong>Running Security Tests...</strong></p>
                    <p class="mb-0">Please wait while we execute all security validation tests.</p>
                </div>
            }

            @if (!Model.TestsCompleted && !Model.TestsRunning)
            {
                <div class="jumbotron bg-light p-5 rounded text-center">
                    <h2>üöÄ Ready to Test SafeVault Security</h2>
                    <p class="lead">Click the button above to execute our comprehensive security test suite covering:</p>
                    
                    <!-- Quick Start Guide -->
                    <div class="alert alert-info text-start mb-4">
                        <h6><i class="fas fa-rocket"></i> Quick Start Guide</h6>
                        <p class="mb-2"><strong>New to security testing?</strong> Here's how to get the most from this platform:</p>
                        <ol>
                            <li><strong>Run Tests:</strong> Click "Run Security Tests" above to see all 52 tests execute</li>
                            <li><strong>Learn:</strong> Scroll down to the "Activity 3 - Interactive Security Education" section</li>
                            <li><strong>Practice:</strong> Try the vulnerable demo with sample attacks, then see the secure version</li>
                            <li><strong>Study:</strong> Review the code examples in the educational tabs</li>
                        </ol>
                    </div>
                    
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="card border-primary">
                                <div class="card-body">
                                    <h5 class="card-title">üîí Activity 1 - Input Security</h5>
                                    <ul class="list-unstyled">
                                        <li>‚úì SQL Injection Prevention</li>
                                        <li>‚úì XSS Attack Protection</li>
                                        <li>‚úì Input Validation</li>
                                        <li>‚úì Database Security</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-success">
                                <div class="card-body">
                                    <h5 class="card-title">üîê Activity 2 - Authentication</h5>
                                    <ul class="list-unstyled">
                                        <li>‚úì User Model Security</li>
                                        <li>‚úì Password Authentication</li>
                                        <li>‚úì Role-Based Authorization</li>
                                        <li>‚úì Session Management</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Activity 3 Educational Demos - Integrated into Main Dashboard -->
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card border-info">
                            <div class="card-header bg-info text-white">
                                <h5 class="card-title mb-0">üéì Activity 3 - Interactive Security Education</h5>
                            </div>
                            <div class="card-body">
                                <p class="card-text">Learn about security vulnerabilities and their fixes with interactive examples:</p>
                                
                                <!-- Tabbed Interface for Educational Content -->
                                <ul class="nav nav-tabs" id="securityTabs" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">
                                            üìä Overview
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="xss-tab" data-bs-toggle="tab" data-bs-target="#xss" type="button" role="tab">
                                            ‚ö†Ô∏è XSS Demo
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="csrf-tab" data-bs-toggle="tab" data-bs-target="#csrf" type="button" role="tab">
                                            üîí CSRF Demo
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="sql-tab" data-bs-toggle="tab" data-bs-target="#sql" type="button" role="tab">
                                            üíâ SQL Demo
                                        </button>
                                    </li>
                                </ul>
                                
                                <div class="tab-content mt-3" id="securityTabContent">
                                    <!-- Overview Tab -->
                                    <div class="tab-pane fade show active" id="overview" role="tabpanel">
                                        <div class="alert alert-primary">
                                            <h6><i class="fas fa-lightbulb"></i> How to Use Activity 3 Demos</h6>
                                            <p class="mb-2"><strong>Step 1:</strong> Visit the <strong>Vulnerable Demo</strong> and try the suggested attacks</p>
                                            <p class="mb-2"><strong>Step 2:</strong> Visit the <strong>Secure Demo</strong> with the same inputs - see how they're safely handled</p>
                                            <p class="mb-0"><strong>Step 3:</strong> Study the code examples in the tabs below to understand the fixes</p>
                                        </div>
                                        
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="card border-danger">
                                                    <div class="card-body">
                                                        <h6><i class="fas fa-bug"></i> Vulnerable Implementation</h6>
                                                        <p class="card-text">Examples of common security vulnerabilities that attackers exploit.</p>
                                                        <div class="d-grid">
                                                            <a href="/vulnerable-demo" class="btn btn-outline-danger" target="_blank">
                                                                <i class="fas fa-external-link-alt"></i> Try Vulnerable Demo
                                                            </a>
                                                        </div>
                                                        <small class="text-muted mt-2 d-block">Try XSS: <code>&lt;script&gt;alert('XSS')&lt;/script&gt;</code></small>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="card border-success">
                                                    <div class="card-body">
                                                        <h6><i class="fas fa-shield-alt"></i> Secure Implementation</h6>
                                                        <p class="card-text">Proper security measures and best practices to prevent attacks.</p>
                                                        <div class="d-grid">
                                                            <a href="/secure-demo" class="btn btn-outline-success" target="_blank">
                                                                <i class="fas fa-external-link-alt"></i> View Secure Demo
                                                            </a>
                                                        </div>
                                                        <small class="text-muted mt-2 d-block">Same input safely handled with encoding</small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- XSS Demo Tab -->
                                    <div class="tab-pane fade" id="xss" role="tabpanel">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <h6 class="text-danger">‚ùå Vulnerable Code</h6>
                                                <pre class="bg-light p-3 border"><code>// Raw HTML output - DANGEROUS!
@@Html.Raw(userInput)

// No encoding - VULNERABLE!
&lt;div&gt;@@userInput&lt;/div&gt;</code></pre>
                                                <div class="alert alert-warning">
                                                    <small><strong>Risk:</strong> Allows script injection attacks</small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <h6 class="text-success">‚úÖ Secure Code</h6>
                                                <pre class="bg-light p-3 border"><code>// HTML encoded - SAFE!
@@Html.Encode(userInput)

// Automatic encoding - SECURE!
&lt;div&gt;@@userInput&lt;/div&gt;</code></pre>
                                                <div class="alert alert-success">
                                                    <small><strong>Protection:</strong> HTML encoding prevents script execution</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- CSRF Demo Tab -->
                                    <div class="tab-pane fade" id="csrf" role="tabpanel">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <h6 class="text-danger">‚ùå Vulnerable Form</h6>
                                                <pre class="bg-light p-3 border"><code>&lt;form method="post"&gt;
  &lt;!-- No CSRF protection --&gt;
  &lt;input name="amount" /&gt;
  &lt;button&gt;Transfer&lt;/button&gt;
&lt;/form&gt;</code></pre>
                                                <div class="alert alert-warning">
                                                    <small><strong>Risk:</strong> Cross-site request forgery attacks</small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <h6 class="text-success">‚úÖ Secure Form</h6>
                                                <pre class="bg-light p-3 border"><code>&lt;form method="post"&gt;
  @@Html.AntiForgeryToken()
  &lt;input name="amount" /&gt;
  &lt;button&gt;Transfer&lt;/button&gt;
&lt;/form&gt;</code></pre>
                                                <div class="alert alert-success">
                                                    <small><strong>Protection:</strong> Anti-forgery tokens prevent CSRF</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- SQL Demo Tab -->
                                    <div class="tab-pane fade" id="sql" role="tabpanel">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <h6 class="text-danger">‚ùå Vulnerable Query</h6>
                                                <pre class="bg-light p-3 border"><code>// String concatenation - DANGEROUS!
var sql = "SELECT * FROM Users " +
          "WHERE Username = '" + 
          username + "'";
db.ExecuteRaw(sql);</code></pre>
                                                <div class="alert alert-warning">
                                                    <small><strong>Risk:</strong> SQL injection attacks</small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <h6 class="text-success">‚úÖ Secure Query</h6>
                                                <pre class="bg-light p-3 border"><code>// Parameterized query - SAFE!
var user = await context.Users
  .Where(u => u.Username == username)
  .FirstOrDefaultAsync();

// EF Core handles parameterization</code></pre>
                                                <div class="alert alert-success">
                                                    <small><strong>Protection:</strong> Parameters prevent injection</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            @if (Model.TestsCompleted && Model.TestSummary != null)
            {
                <div class="row mb-4">
                    <div class="col-12">
                        @{
                            var cardBorderClass = Model.TestSummary.FailedTests == 0 ? "border-success" : "border-danger";
                            var cardHeaderClass = Model.TestSummary.FailedTests == 0 ? "bg-success" : "bg-danger";
                        }
                        <div class="card @cardBorderClass">
                            <div class="card-header @cardHeaderClass text-white">
                                <h3 class="card-title mb-0">
                                    @if (Model.TestSummary.FailedTests == 0)
                                    {
                                        <text><i class="fas fa-check-circle"></i> All Tests Passed!</text>
                                    }
                                    else
                                    {
                                        <text><i class="fas fa-exclamation-triangle"></i> Some Tests Failed</text>
                                    }
                                </h3>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-primary">@Model.TestSummary.TotalTests</h4>
                                            <p class="mb-0">Total Tests</p>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-success">@Model.TestSummary.PassedTests</h4>
                                            <p class="mb-0">Passed</p>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-danger">@Model.TestSummary.FailedTests</h4>
                                            <p class="mb-0">Failed</p>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-info">@Model.TestSummary.PassRate.ToString("F1")%</h4>
                                            <p class="mb-0">Success Rate</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-3">
                                    <div class="progress" style="height: 25px;">
                                        <div class="progress-bar bg-success" role="progressbar" 
                                             style="width: @Model.TestSummary.PassRate.ToString("F1")%" 
                                             aria-valuenow="@Model.TestSummary.PassRate" aria-valuemin="0" aria-valuemax="100">
                                            @Model.TestSummary.PassRate.ToString("F1")%
                                        </div>
                                    </div>
                                </div>
                                <p class="mt-2 mb-0">
                                    <small class="text-muted">
                                        Executed on @Model.TestSummary.ExecutionDate.ToString("yyyy-MM-dd HH:mm:ss") UTC 
                                        in @Model.TestSummary.TotalExecutionTime.TotalMilliseconds.ToString("F0")ms
                                    </small>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                @foreach (var category in Model.GetCategories())
                {
                    var categoryTests = Model.GetTestsByCategory(category);
                    var categoryPassCount = Model.GetCategoryPassCount(category);
                    var categoryTotalCount = Model.GetCategoryTotalCount(category);
                    var categoryPassRate = categoryTotalCount > 0 ? (double)categoryPassCount / categoryTotalCount * 100 : 0;

                    <div class="card mb-4">
                        <div class="card-header">
                            <h4 class="mb-0">
                                @switch (category)
                                {
                                    case "Input Validation":
                                        <i class="fas fa-shield-alt text-primary"></i>
                                        break;
                                    case "SQL Injection Prevention":
                                        <i class="fas fa-database text-warning"></i>
                                        break;
                                    case "XSS Prevention":
                                        <i class="fas fa-code text-danger"></i>
                                        break;
                                    case "User Model":
                                        <i class="fas fa-user text-info"></i>
                                        break;
                                    case "Authentication":
                                        <i class="fas fa-key text-success"></i>
                                        break;
                                    case "Authorization":
                                        <i class="fas fa-lock text-secondary"></i>
                                        break;
                                    case "Session Management":
                                        <i class="fas fa-clock text-primary"></i>
                                        break;
                                    default:
                                        <i class="fas fa-cog"></i>
                                        break;
                                }
                                @category
                                @{
                                    var badgeClass = categoryPassCount == categoryTotalCount ? "bg-success" : "bg-danger";
                                }
                                <span class="badge @badgeClass ms-2">
                                    @categoryPassCount/@categoryTotalCount
                                </span>
                            </h4>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th style="width: 50px;">Status</th>
                                            <th>Test Name</th>
                                            <th style="width: 100px;">Duration</th>
                                            <th>Details</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var test in categoryTests)
                                        {
                                            <tr class="@(test.Passed ? "table-light" : "table-danger")">
                                                <td class="text-center">
                                                    @if (test.Passed)
                                                    {
                                                        <i class="fas fa-check-circle text-success"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-times-circle text-danger"></i>
                                                    }
                                                </td>
                                                <td>
                                                    <strong>@test.TestName</strong>
                                                </td>
                                                <td>
                                                    <small class="text-muted">@test.ExecutionTime.TotalMilliseconds.ToString("F0")ms</small>
                                                </td>
                                                <td>
                                                    @if (!test.Passed && !string.IsNullOrEmpty(test.ErrorMessage))
                                                    {
                                                        <span class="text-danger">
                                                            <i class="fas fa-exclamation-triangle"></i> @test.ErrorMessage
                                                        </span>
                                                    }
                                                    else if (test.Passed)
                                                    {
                                                        <span class="text-success">‚úì Passed</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<style>
    .jumbotron {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border: 1px solid #dee2e6;
    }
    
    .card-header h4 {
        color: #495057;
    }
    
    .progress {
        box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
    }
    
    .table-hover tbody tr:hover {
        background-color: rgba(0,0,0,.075);
    }
    
    .spinner-border {
        width: 3rem;
        height: 3rem;
    }
</style>
